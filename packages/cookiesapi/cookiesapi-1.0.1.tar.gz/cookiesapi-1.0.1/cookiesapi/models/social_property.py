# -*- coding: utf-8 -*-

"""
cookiesapi

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""


class SocialProperty(object):

    """Implementation of the 'SocialProperty' model.

    Social media account property.

    Attributes:
        property (string): Social network where this profile exists.
        link (string): Link to this social profile.
        id (string): Unique ID for this social profile, or username.

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "property": 'property',
        "link": 'link',
        "id": 'id'
    }

    def __init__(self,
                 property=None,
                 link=None,
                 id=None):
        """Constructor for the SocialProperty class"""

        # Initialize members of the class
        self.property = property
        self.link = link
        self.id = id

    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object
            as obtained from the deserialization of the server's response. The
            keys MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """
        if dictionary is None:
            return None

        # Extract variables from the dictionary
        property = dictionary.get('property')
        link = dictionary.get('link')
        id = dictionary.get('id')

        # Return an object of this model
        return cls(property,
                   link,
                   id)
