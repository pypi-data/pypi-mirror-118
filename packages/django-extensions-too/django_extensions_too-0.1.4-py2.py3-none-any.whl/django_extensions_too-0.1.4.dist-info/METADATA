Metadata-Version: 2.1
Name: django-extensions-too
Version: 0.1.4
Summary: Django Extensions is a collection of custom extensions for the Django Framework.
Home-page: https://github.com/tsantor/django-extensions-too
Author: Tim Santor
Author-email: tsantor@xstudios.com
License: MIT
Keywords: django-extensions-too
Platform: UNKNOWN
Classifier: Development Status :: 3 - Alpha
Classifier: Framework :: Django :: 2.1
Classifier: Intended Audience :: Developers
Classifier: License :: OSI Approved :: BSD License
Classifier: Natural Language :: English
Classifier: Programming Language :: Python :: 3.6
Classifier: Programming Language :: Python :: 3.7
Classifier: Programming Language :: Python :: 3.8
Classifier: Programming Language :: Python :: 3.9
Description-Content-Type: text/markdown

# Django Extensions Too
Author:Tim Santor <tsantor@xstudios.agency>

# Overview
Django Extensions Too is a collection of custom extensions for the Django Framework. It is recommended as a supplement to the excellent https://github.com/django-extensions/django-extensions


# Getting It
To install Django Extensions Too, just use pip:

    $ pip install django-extensions-too

To install the development version:

    $ pip install git+https://bitbucket.org/tsantor/django-extensions-too.git

If you want to install it from source, grab the git repository and run setup.py:

    $ git clone https://bitbucket.org/tsantor/django-extensions-too.git
    $ cd django-extensions-too
    $ python setup.py install


# Installing It
To enable `django_extensions_too` in your project you need to add it to `INSTALLED_APPS` in your projects `settings.py` file:

    INSTALLED_APPS = (
        ...
        'django_extensions_too',
        ...
    )


# Using It
Delete all files from `MEDIA_ROOT` which are not referenced in the database.

    $ python manage.py delete_unreferenced_files


Show a list of all files missing from `MEDIA_ROOT` that are referenced in the database.

    $ python manage.py missing_files


Completely remove an installed app from a project. Removes all model related tables as well as all traces from `auth_permissions`, `django_admin_log`, `django_content_type`, `django_migrations`, etc.

    $ python manage.py remove_app appname


Adds permissions where the model actually references the proxy model and not the original model.

    $ python manage.py fix_proxy_permissions


# Documentation
You can view documentation online at:

- TODO

Or you can look at the docs/ directory in the repository.


# Issues
If you experience any issues, please create an [issue](https://bitbucket.org/tsantor/django-extensions-too/issues) on Bitbucket.


# History
All notable changes to this project will be documented in this file. This project adheres to [Semantic Versioning](http://semver.org/).

## 0.1.4 (2021-09-03)
* Added `manifest_storage_check` to test manifest storage methods locally.

## 0.1.3 (2021-08-24)
* Fixed `delete_unreferenced_files` and `missing_files` to not assume local file storage backend.

## 0.1.2 (2017-04-03)
* Added a `delete_unreferenced_files` command which deletes all files in MEDIA_ROOT that are not referenced in the database.

## 0.1.1 (2017-04-03)
* Fixed a bug with an outdated permissions method call in `fix_proxy_permissions` command.

## 0.1.0 (2017-03-30)
* First release on PyPI.


