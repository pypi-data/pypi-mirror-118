{
	"info": {
		"_postman_id": "eb4b18b0-821e-464d-90cc-5316de433bd9",
		"name": "Repository Packages",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "requests",
			"item": [
				{
					"name": "Repository Package Get All",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Data attribute should be an array\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.data).to.be.an('array');",
									"});",
									"",
									"pm.test(\"Item type should be packages\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.data[0].type).to.be.eql('packages');",
									"});",
									"",
									"pm.test(\"Created Item should be present\", function () {",
									"    var jsonData = pm.response.json();",
									"    for (var i=0; i< jsonData.data.length; i++) {",
									"        var package = jsonData.data[i];",
									"        if (package.id === pm.collectionVariables.get('packageNameToCreate')) {",
									"            return true;",
									"        }",
									"    }",
									"    return false;",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/vnd.api+json",
								"type": "text"
							},
							{
								"key": "Cookie",
								"value": "refreshToken={{refreshToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/repositories/{{repositoryId}}/packages",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"repositories",
								"{{repositoryId}}",
								"packages"
							]
						}
					},
					"response": []
				},
				{
					"name": "Repositories Get All",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"var jsonData = pm.response.json();",
									"pm.collectionVariables.set(\"repositoryId\", jsonData.data[0].id);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/vnd.api+json"
							},
							{
								"key": "Cookie",
								"value": "refreshToken={{refreshToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/repositories",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"repositories"
							]
						}
					},
					"response": []
				},
				{
					"name": "Repository Package Create",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									"pm.test(\"Item type should be packages\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.data.type).to.be.eql('packages');",
									"});",
									"",
									"pm.test(\"name should be same\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.data.id).to.be.eql(pm.collectionVariables.get('packageNameToCreate'));",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.collectionVariables.set('packageNameToCreate', pm.variables.replaceIn('{{$randomStreetName}}'));"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/vnd.api+json",
								"type": "text"
							},
							{
								"key": "Cookie",
								"value": "refreshToken={{refreshToken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"data\": {\n        \"type\": \"packages\",\n        \"attributes\": {\n            \"package_name\": \"{{packageNameToCreate}}\"\n        }\n    }\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/repositories/{{repositoryId}}/packages",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"repositories",
								"{{repositoryId}}",
								"packages"
							]
						}
					},
					"response": []
				},
				{
					"name": "Repository Package Get One",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Item type should be packages\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.data.type).to.be.eql('packages');",
									"});",
									"",
									"pm.test(\"id should be same\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.data.id).to.be.eql(pm.collectionVariables.get('packageNameToCreate'));",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/vnd.api+json"
							},
							{
								"key": "Cookie",
								"value": "refreshToken={{refreshToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/repositories/{{repositoryId}}/packages/{{packageNameToCreate}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"repositories",
								"{{repositoryId}}",
								"packages",
								"{{packageNameToCreate}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Repository Package Delete",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 204\", function () {",
									"    pm.response.to.have.status(204);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/vnd.api+json"
							},
							{
								"key": "Cookie",
								"value": "refreshToken={{refreshToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/repositories/{{repositoryId}}/packages/{{packageNameToCreate}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"repositories",
								"{{repositoryId}}",
								"packages",
								"{{packageNameToCreate}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Elastic Search",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Cookie",
								"value": "refreshToken={{refreshToken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{{query}}"                                           
						},
						"url": {
							"raw": "{{elasticBaseUrl}}/{{index}}/_search",
							"host": [
								"{{elasticBaseUrl}}"
							],
							"path": [
								"{{index}}",
								"_search"
							]
						}
					},
					"response": []
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					"postman.setGlobalVariable(\"baseUrl\", \"http://localhost:3000\")",
					"eval(globals.setCookies);"
				]
			}
		}
	],
	"variable": [
		{
			"key": "repositoryId",
			"value": ""
		},
		{
			"key": "packageNameToCreate",
			"value": ""
		}
	]
}