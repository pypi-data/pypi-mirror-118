{".class": "MypyFile", "_fullname": "pydantic.generics", "is_partial_stub_package": false, "is_stub": false, "names": {".class": "SymbolTable", "Annotated": {".class": "SymbolTableNode", "cross_ref": "typing_extensions.Annotated", "kind": "Gdef"}, "Any": {".class": "SymbolTableNode", "cross_ref": "typing.Any", "kind": "Gdef"}, "BaseModel": {".class": "SymbolTableNode", "cross_ref": "pydantic.main.BaseModel", "kind": "Gdef"}, "ClassVar": {".class": "SymbolTableNode", "cross_ref": "typing.ClassVar", "kind": "Gdef"}, "DeferredType": {".class": "SymbolTableNode", "cross_ref": "pydantic.fields.DeferredType", "kind": "Gdef"}, "Dict": {".class": "SymbolTableNode", "cross_ref": "typing.Dict", "kind": "Gdef"}, "DictValues": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "Var", "flags": ["is_ready"], "fullname": "pydantic.generics.DictValues", "name": "DictValues", "type": {".class": "TypeType", "item": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}}}}, "Generic": {".class": "SymbolTableNode", "cross_ref": "typing.Generic", "kind": "Gdef"}, "GenericModel": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "TypeInfo", "_promote": null, "abstract_attributes": [], "bases": ["pydantic.main.BaseModel"], "declared_metaclass": null, "defn": {".class": "ClassDef", "fullname": "pydantic.generics.GenericModel", "name": "GenericModel", "type_vars": []}, "flags": [], "fullname": "pydantic.generics.GenericModel", "metaclass_type": "pydantic.main.ModelMetaclass", "metadata": {}, "module_name": "pydantic.generics", "mro": ["pydantic.generics.GenericModel", "pydantic.main.BaseModel", "pydantic.utils.Representation", "builtins.object"], "names": {".class": "SymbolTable", "__class_getitem__": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 0], "arg_names": ["cls", "params"], "flags": ["is_class"], "fullname": "pydantic.generics.GenericModel.__class_getitem__", "name": "__class_getitem__", "type": {".class": "CallableType", "arg_kinds": [0, 0], "arg_names": ["cls", "params"], "arg_types": [{".class": "TypeType", "item": {".class": "TypeVarType", "fullname": "pydantic.generics.GenericModelT", "id": -1, "name": "GenericModelT", "upper_bound": "pydantic.generics.GenericModel", "values": [], "variance": 0}}, {".class": "UnionType", "items": [{".class": "TypeType", "item": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}}, {".class": "Instance", "args": [{".class": "TypeType", "item": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}}], "type_ref": "builtins.tuple"}]}], "bound_args": [], "def_extras": {"first_arg": "cls"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "__class_getitem__ of GenericModel", "ret_type": {".class": "TypeType", "item": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}}, "variables": [{".class": "TypeVarDef", "fullname": "pydantic.generics.GenericModelT", "id": -1, "name": "GenericModelT", "upper_bound": "pydantic.generics.GenericModel", "values": [], "variance": 0}]}}}, "__concrete__": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_classvar", "is_ready"], "fullname": "pydantic.generics.GenericModel.__concrete__", "name": "__concrete__", "type": "builtins.bool"}}, "__concrete_name__": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Decorator", "func": {".class": "FuncDef", "arg_kinds": [0, 0], "arg_names": ["cls", "params"], "flags": ["is_class", "is_decorated"], "fullname": "pydantic.generics.GenericModel.__concrete_name__", "name": "__concrete_name__", "type": {".class": "CallableType", "arg_kinds": [0, 0], "arg_names": ["cls", "params"], "arg_types": [{".class": "TypeType", "item": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}}, {".class": "Instance", "args": [{".class": "TypeType", "item": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}}], "type_ref": "builtins.tuple"}], "bound_args": [], "def_extras": {"first_arg": "cls"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "__concrete_name__ of GenericModel", "ret_type": "builtins.str", "variables": []}}, "is_overload": false, "var": {".class": "Var", "flags": ["is_initialized_in_class", "is_classmethod", "is_ready"], "fullname": null, "name": "__concrete_name__", "type": {".class": "CallableType", "arg_kinds": [0, 0], "arg_names": ["cls", "params"], "arg_types": [{".class": "TypeType", "item": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}}, {".class": "Instance", "args": [{".class": "TypeType", "item": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}}], "type_ref": "builtins.tuple"}], "bound_args": [], "def_extras": {"first_arg": "cls"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "__concrete_name__ of GenericModel", "ret_type": "builtins.str", "variables": []}}}}, "__parameters__": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_classvar", "is_ready"], "fullname": "pydantic.generics.GenericModel.__parameters__", "name": "__parameters__", "type": {".class": "Instance", "args": [{".class": "TypeAliasType", "args": [], "type_ref": "pydantic.generics.TypeVarType"}], "type_ref": "builtins.tuple"}}}, "__slots__": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class"], "fullname": "pydantic.generics.GenericModel.__slots__", "name": "__slots__", "type": {".class": "TupleType", "implicit": false, "items": [], "partial_fallback": {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 6}], "type_ref": "builtins.tuple"}}}}}, "tuple_type": null, "type_vars": [], "typeddict_type": null}}, "GenericModelT": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "TypeVarExpr", "fullname": "pydantic.generics.GenericModelT", "name": "GenericModelT", "upper_bound": "pydantic.generics.GenericModel", "values": [], "variance": 0}}, "Iterator": {".class": "SymbolTableNode", "cross_ref": "typing.Iterator", "kind": "Gdef"}, "List": {".class": "SymbolTableNode", "cross_ref": "typing.List", "kind": "Gdef"}, "Mapping": {".class": "SymbolTableNode", "cross_ref": "typing.Mapping", "kind": "Gdef"}, "Optional": {".class": "SymbolTableNode", "cross_ref": "typing.Optional", "kind": "Gdef"}, "TYPE_CHECKING": {".class": "SymbolTableNode", "cross_ref": "typing.TYPE_CHECKING", "kind": "Gdef"}, "Tuple": {".class": "SymbolTableNode", "cross_ref": "typing.Tuple", "kind": "Gdef"}, "Type": {".class": "SymbolTableNode", "cross_ref": "typing.Type", "kind": "Gdef"}, "TypeVar": {".class": "SymbolTableNode", "cross_ref": "typing.TypeVar", "kind": "Gdef"}, "TypeVarType": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "TypeAlias", "alias_tvars": [], "column": 0, "fullname": "pydantic.generics.TypeVarType", "line": 30, "no_args": false, "normalized": false, "target": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 6}}}, "Union": {".class": "SymbolTableNode", "cross_ref": "typing.Union", "kind": "Gdef"}, "__doc__": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "Var", "flags": ["is_ready"], "fullname": "pydantic.generics.__doc__", "name": "__doc__", "type": "builtins.str"}}, "__file__": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "Var", "flags": ["is_ready"], "fullname": "pydantic.generics.__file__", "name": "__file__", "type": "builtins.str"}}, "__name__": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "Var", "flags": ["is_ready"], "fullname": "pydantic.generics.__name__", "name": "__name__", "type": "builtins.str"}}, "__package__": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "Var", "flags": ["is_ready"], "fullname": "pydantic.generics.__package__", "name": "__package__", "type": "builtins.str"}}, "_generic_types_cache": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "Var", "flags": ["is_ready"], "fullname": "pydantic.generics._generic_types_cache", "name": "_generic_types_cache", "type": {".class": "Instance", "args": [{".class": "TupleType", "implicit": false, "items": [{".class": "TypeType", "item": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}}, {".class": "UnionType", "items": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}, {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "builtins.tuple"}]}], "partial_fallback": {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 6}], "type_ref": "builtins.tuple"}}, {".class": "TypeType", "item": "pydantic.main.BaseModel"}], "type_ref": "builtins.dict"}}}, "_prepare_model_fields": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "FuncDef", "arg_kinds": [0, 0, 0, 0], "arg_names": ["created_model", "fields", "instance_type_hints", "typevars_map"], "flags": [], "fullname": "pydantic.generics._prepare_model_fields", "name": "_prepare_model_fields", "type": {".class": "CallableType", "arg_kinds": [0, 0, 0, 0], "arg_names": ["created_model", "fields", "instance_type_hints", "typevars_map"], "arg_types": [{".class": "TypeType", "item": "pydantic.generics.GenericModel"}, {".class": "Instance", "args": ["builtins.str", {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "typing.Mapping"}, {".class": "Instance", "args": ["builtins.str", "builtins.type"], "type_ref": "typing.Mapping"}, {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}, "builtins.type"], "type_ref": "typing.Mapping"}], "bound_args": [], "def_extras": {"first_arg": null}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "_prepare_model_fields", "ret_type": {".class": "NoneType"}, "variables": []}}}, "all_identical": {".class": "SymbolTableNode", "cross_ref": "pydantic.utils.all_identical", "kind": "Gdef"}, "cast": {".class": "SymbolTableNode", "cross_ref": "typing.cast", "kind": "Gdef"}, "check_parameters_count": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "FuncDef", "arg_kinds": [0, 0], "arg_names": ["cls", "parameters"], "flags": [], "fullname": "pydantic.generics.check_parameters_count", "name": "check_parameters_count", "type": {".class": "CallableType", "arg_kinds": [0, 0], "arg_names": ["cls", "parameters"], "arg_types": [{".class": "TypeType", "item": "pydantic.generics.GenericModel"}, {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "builtins.tuple"}], "bound_args": [], "def_extras": {"first_arg": null}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "check_parameters_count", "ret_type": {".class": "NoneType"}, "variables": []}}}, "create_model": {".class": "SymbolTableNode", "cross_ref": "pydantic.main.create_model", "kind": "Gdef"}, "display_as_type": {".class": "SymbolTableNode", "cross_ref": "pydantic.typing.display_as_type", "kind": "Gdef"}, "gather_all_validators": {".class": "SymbolTableNode", "cross_ref": "pydantic.class_validators.gather_all_validators", "kind": "Gdef"}, "get_all_type_hints": {".class": "SymbolTableNode", "cross_ref": "pydantic.typing.get_all_type_hints", "kind": "Gdef"}, "get_args": {".class": "SymbolTableNode", "cross_ref": "pydantic.typing.get_args", "kind": "Gdef"}, "get_caller_frame_info": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "FuncDef", "arg_kinds": [], "arg_names": [], "flags": [], "fullname": "pydantic.generics.get_caller_frame_info", "name": "get_caller_frame_info", "type": {".class": "CallableType", "arg_kinds": [], "arg_names": [], "arg_types": [], "bound_args": [], "def_extras": {"first_arg": null}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "get_caller_frame_info", "ret_type": {".class": "TupleType", "implicit": false, "items": [{".class": "UnionType", "items": ["builtins.str", {".class": "NoneType"}]}, "builtins.bool"], "partial_fallback": {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 6}], "type_ref": "builtins.tuple"}}, "variables": []}}}, "get_origin": {".class": "SymbolTableNode", "cross_ref": "pydantic.typing.get_origin", "kind": "Gdef"}, "iter_contained_typevars": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "FuncDef", "arg_kinds": [0], "arg_names": ["v"], "flags": ["is_generator"], "fullname": "pydantic.generics.iter_contained_typevars", "name": "iter_contained_typevars", "type": {".class": "CallableType", "arg_kinds": [0], "arg_names": ["v"], "arg_types": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "bound_args": [], "def_extras": {"first_arg": null}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "iter_contained_typevars", "ret_type": {".class": "Instance", "args": [{".class": "TypeAliasType", "args": [], "type_ref": "pydantic.generics.TypeVarType"}], "type_ref": "typing.Iterator"}, "variables": []}}}, "lenient_issubclass": {".class": "SymbolTableNode", "cross_ref": "pydantic.utils.lenient_issubclass", "kind": "Gdef"}, "replace_types": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "FuncDef", "arg_kinds": [0, 0], "arg_names": ["type_", "type_map"], "flags": [], "fullname": "pydantic.generics.replace_types", "name": "replace_types", "type": {".class": "CallableType", "arg_kinds": [0, 0], "arg_names": ["type_", "type_map"], "arg_types": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}, {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}, {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "typing.Mapping"}], "bound_args": [], "def_extras": {"first_arg": null}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "replace_types", "ret_type": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}, "variables": []}}}, "sys": {".class": "SymbolTableNode", "cross_ref": "sys", "kind": "Gdef"}, "typing": {".class": "SymbolTableNode", "cross_ref": "typing", "kind": "Gdef"}, "typing_base": {".class": "SymbolTableNode", "cross_ref": "pydantic.typing.typing_base", "kind": "Gdef"}}, "path": "/Users/admin/opt/anaconda3/envs/py394/lib/python3.9/site-packages/pydantic/generics.py"}