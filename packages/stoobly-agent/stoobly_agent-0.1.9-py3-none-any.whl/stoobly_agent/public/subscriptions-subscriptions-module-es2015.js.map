{"version":3,"sources":["./src/app/modules/subscriptions/services/payment-methods-resolver.service.ts","./src/app/modules/subscriptions/pages/pricing/services/plan-resolver.service.ts","./src/app/modules/subscriptions/pages/pricing/services/plans-resolver.service.ts","./src/app/modules/subscriptions/subscriptions.module.ts","./src/app/modules/subscriptions/subscriptions-routing.module.ts"],"names":[],"mappings":"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","file":"subscriptions-subscriptions-module-es2015.js","sourcesContent":["import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, Resolve } from '@angular/router';\n\nimport { PaymentMethodResource } from '@core/http/payment-method-resource.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class PaymentMethodsResolver implements Resolve<any> {\n\n  constructor(\n    private paymentMethodResource: PaymentMethodResource\n  ) { }\n\n  resolve(route: ActivatedRouteSnapshot) {\n    const { organization_id: organizationId } = route.queryParams;\n\n    if (organizationId) {\n      return this.paymentMethodResource.index({\n        organization_id: organizationId,\n      });\n    } else {\n      return this.paymentMethodResource.index();\n    }\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, Resolve } from '@angular/router';\n\nimport { PlanResource } from '@core/http/plan-resource.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class PlanResolver implements Resolve<any> {\n\n  constructor(\n    private planResource: PlanResource\n  ) { }\n\n  resolve(route: ActivatedRouteSnapshot) {\n    return this.planResource.show(route.queryParams.plan_id);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, Resolve } from '@angular/router';\n\nimport { PlanResource } from '@core/http/plan-resource.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class PlansResolver implements Resolve<any> {\n\n  constructor(\n    private planResource: PlanResource\n  ) { }\n\n  resolve(route: ActivatedRouteSnapshot) {\n    return this.planResource.index();\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { SubscriptionsRoutingModule } from './subscriptions-routing.module';\n\n@NgModule({\n  declarations: [],\n  imports: [\n    CommonModule,\n    SubscriptionsRoutingModule,\n  ],\n})\nexport class SubscriptionsModule { }\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { OrganizationResolver } from '@organizations/services/organization-resolver.service';\nimport { UserSubscriptionResolver } from '@users/services/user-subscription-resolver.service';\n\nimport { PlanResolver } from './pages/pricing/services/plan-resolver.service';\nimport { PlansResolver } from './pages/pricing/services/plans-resolver.service';\nimport { PaymentMethodsResolver } from './services/payment-methods-resolver.service';\n\nconst routes: Routes = [\n  {\n    path: 'pricing',\n    loadChildren: () => import('@subscriptions/pages/pricing/pricing.module').then(m => m.PricingModule),\n    resolve: {\n      plans: PlansResolver,\n      subscription: UserSubscriptionResolver,\n    },\n  },\n  {\n    path: 'buy',\n    loadChildren: () => import('@subscriptions/pages/buy/buy.module').then(m => m.BuyModule),\n    resolve: {\n      organization: OrganizationResolver,\n      plan: PlanResolver,\n      paymentMethods: PaymentMethodsResolver,\n      subscription: UserSubscriptionResolver,\n    },\n  },\n  {\n    path: '**',\n    loadChildren: () => import('@error/pages/404/error-404.module').then(m => m.Error404Module),\n  },\n];\n\n@NgModule({\n  imports: [\n    RouterModule.forChild(routes),\n  ],\n  exports: [RouterModule],\n})\nexport class SubscriptionsRoutingModule { }\n"],"sourceRoot":"webpack:///"}