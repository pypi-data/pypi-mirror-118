{"version":3,"sources":["webpack:///src/app/modules/subscriptions/services/payment-methods-resolver.service.ts","webpack:///src/app/modules/subscriptions/pages/pricing/services/plan-resolver.service.ts","webpack:///src/app/modules/subscriptions/pages/pricing/services/plans-resolver.service.ts","webpack:///src/app/modules/subscriptions/subscriptions.module.ts","webpack:///src/app/modules/subscriptions/subscriptions-routing.module.ts"],"names":["PaymentMethodsResolver","paymentMethodResource","route","organizationId","queryParams","organization_id","index","providedIn","PlanResolver","planResource","show","plan_id","PlansResolver","SubscriptionsModule","declarations","imports","routes","path","loadChildren","then","m","PricingModule","resolve","plans","subscription","BuyModule","organization","plan","paymentMethods","Error404Module","SubscriptionsRoutingModule","forChild","exports"],"mappings":"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","file":"subscriptions-subscriptions-module-es5.js","sourcesContent":["import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, Resolve } from '@angular/router';\n\nimport { PaymentMethodResource } from '@core/http/payment-method-resource.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class PaymentMethodsResolver implements Resolve<any> {\n\n  constructor(\n    private paymentMethodResource: PaymentMethodResource\n  ) { }\n\n  resolve(route: ActivatedRouteSnapshot) {\n    const { organization_id: organizationId } = route.queryParams;\n\n    if (organizationId) {\n      return this.paymentMethodResource.index({\n        organization_id: organizationId,\n      });\n    } else {\n      return this.paymentMethodResource.index();\n    }\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, Resolve } from '@angular/router';\n\nimport { PlanResource } from '@core/http/plan-resource.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class PlanResolver implements Resolve<any> {\n\n  constructor(\n    private planResource: PlanResource\n  ) { }\n\n  resolve(route: ActivatedRouteSnapshot) {\n    return this.planResource.show(route.queryParams.plan_id);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, Resolve } from '@angular/router';\n\nimport { PlanResource } from '@core/http/plan-resource.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class PlansResolver implements Resolve<any> {\n\n  constructor(\n    private planResource: PlanResource\n  ) { }\n\n  resolve(route: ActivatedRouteSnapshot) {\n    return this.planResource.index();\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { SubscriptionsRoutingModule } from './subscriptions-routing.module';\n\n@NgModule({\n  declarations: [],\n  imports: [\n    CommonModule,\n    SubscriptionsRoutingModule,\n  ],\n})\nexport class SubscriptionsModule { }\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { OrganizationResolver } from '@organizations/services/organization-resolver.service';\nimport { UserSubscriptionResolver } from '@users/services/user-subscription-resolver.service';\n\nimport { PlanResolver } from './pages/pricing/services/plan-resolver.service';\nimport { PlansResolver } from './pages/pricing/services/plans-resolver.service';\nimport { PaymentMethodsResolver } from './services/payment-methods-resolver.service';\n\nconst routes: Routes = [\n  {\n    path: 'pricing',\n    loadChildren: () => import('@subscriptions/pages/pricing/pricing.module').then(m => m.PricingModule),\n    resolve: {\n      plans: PlansResolver,\n      subscription: UserSubscriptionResolver,\n    },\n  },\n  {\n    path: 'buy',\n    loadChildren: () => import('@subscriptions/pages/buy/buy.module').then(m => m.BuyModule),\n    resolve: {\n      organization: OrganizationResolver,\n      plan: PlanResolver,\n      paymentMethods: PaymentMethodsResolver,\n      subscription: UserSubscriptionResolver,\n    },\n  },\n  {\n    path: '**',\n    loadChildren: () => import('@error/pages/404/error-404.module').then(m => m.Error404Module),\n  },\n];\n\n@NgModule({\n  imports: [\n    RouterModule.forChild(routes),\n  ],\n  exports: [RouterModule],\n})\nexport class SubscriptionsRoutingModule { }\n"]}