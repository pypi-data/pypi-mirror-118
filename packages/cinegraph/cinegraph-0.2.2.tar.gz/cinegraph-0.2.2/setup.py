# -*- coding: utf-8 -*-
from setuptools import setup

packages = \
['cinegraph']

package_data = \
{'': ['*']}

install_requires = \
['fire>=0.4.0,<0.5.0', 'opencv-python>=4.5.3,<5.0.0', 'tqdm>=4.62.1,<5.0.0']

entry_points = \
{'console_scripts': ['cinegraph = cinegraph.cli:execute']}

setup_kwargs = {
    'name': 'cinegraph',
    'version': '0.2.2',
    'description': 'A CLI tool that creates a kaleidescope-esque gradient image of your favorite movie.',
    'long_description': '<p align="center">\n        <img width=200px height=200px src="https://raw.githubusercontent.com/AndresMWeber/cinegraph/main/docs/logo.png" alt="Cinegraph Logo" />\n</p>\n\n<div align="center">\n    <a href="https://badge.fury.io/py/cinegraph">\n        <img alt="PyPi Repo" src="https://badge.fury.io/py/cinegraph.svg" />\n    </a>\n    <br />\n    <a href="https://github.com/AndresMWeber/cinegraph/actions/workflows/py-cicd.yml">\n        <img alt="GitHub CICD Action Status" src="https://github.com/AndresMWeber/Cinegraph/actions/workflows/py-cicd.yml/badge.svg" />\n    </a>\n    <a href="https://github.com/AndresMWeber/cinegraph/actions/workflows/pypi-upload.yml">\n        <img alt="GitHub PyPi Deploy Action Status" src="https://github.com/AndresMWeber/cinegraph/actions/workflows/pypi-upload.yml/badge.svg" />\n    </a>\n    <br/>\n    <a href="https://github.com/AndresMWeber/Cinegraph">\n        <img alt="Status" src="https://img.shields.io/badge/status-active-success.svg" />\n    </a>\n    <a href="https://github.com/AndresMWeber/Cinegraph/issues">\n        <img alt="Issues" src="https://img.shields.io/github/issues/andresmweber/Cinegraph.svg" />\n    </a>\n    <a href="https://www.gnu.org/licenses/gpl-3.0">\n        <img alt="License" src="https://img.shields.io/badge/License-GPLv3-blue.svg" />\n    </a>\n    <br />\n    <a href="https://pypi.python.org/pypi/cinegraph">\n        <img alt="Supported Python Versions" src="https://img.shields.io/pypi/pyversions/cinegraph.svg" />\n    </a>\n    <a href="https://codecov.io/gh/AndresMWeber/cinegraph">\n        <img src="https://codecov.io/gh/AndresMWeber/cinegraph/branch/main/graph/badge.svg?token=rQNFZEvfMu"/>\n    </a>\n    <a>\n        <img alt="GitHub code size in bytes" src="https://img.shields.io/github/languages/code-size/andresmweber/Cinegraph" />\n    </a>\n    <br />\n</div>\n<br>\n\n<p align="center"> A CLI tool that creates a kaleidescope-esque gradient image of your favorite movie.\n    <br> \n</p>\n\n<h3 align="center">\n    <code>\n    ¬∑\n    <a href="#installation">Installation</a>\n    ¬∑\n    </code>\n</h3>\n\n## üìù Table of Contents\n\n- [üìù Table of Contents](#-table-of-contents)\n- [üßê About <a name = "about"></a>](#-about-)\n- [üñ•Ô∏è Screenshots <a name = "screenshots"></a>](#Ô∏è-screenshots-)\n- [üí® Quickstart <a name = "quickstart"></a>](#-quickstart-)\n  - [Flags](#flags)\n- [üíæ Installation](#-installation)\n  - [From PyPi](#from-pypi)\n    - [Install steps](#install-steps)\n  - [From GitHub Repo Clone](#from-github-repo-clone)\n    - [Prerequsites](#prerequsites)\n    - [Install steps](#install-steps-1)\n- [‚õèÔ∏è Tech Stack <a name = "tech"></a>](#Ô∏è-tech-stack-)\n- [‚úçÔ∏è Authors <a name = "authors"></a>](#Ô∏è-authors-)\n- [üéâ Acknowledgements <a name = "acknowledgement"></a>](#-acknowledgements-)\n\n\n## üßê About <a name = "about"></a>\n\nA CLI tool that creates a kaleidescope-esque gradient image of your favorite movie.\n\n## üñ•Ô∏è Screenshots <a name = "screenshots"></a>\n\n<div align=center>\n<h2>Total Recall</h2>\n<img src="https://raw.githubusercontent.com/AndresMWeber/cinegraph/main/examples/(2012)%20Total%20Recall_c600_b5_r1920x1080_f1_fm50.jpg" />\n\n<h2>Elysium</h2>\n<img src="https://raw.githubusercontent.com/AndresMWeber/cinegraph/main/examples/(2013)%20Elysium_c600_b5_r1920x1080_f1_fm50.jpg" />\n\n<h2>Pacific Rim</h2>\n<img src="https://raw.githubusercontent.com/AndresMWeber/cinegraph/main/examples/(2013)%20Pacific%20Rim_c600_b5_r1920x1080_f1_fm50.jpg" />\n\n<h2>Star Trek Into Darkness</h2>\n<img src="https://raw.githubusercontent.com/AndresMWeber/cinegraph/main/examples/(2013)%20Star%20Trek%20Into%20Darkness_c600_b5_r1920x1080_f1_fm50.jpg" />\n\n<h2>Edge of Tomorrow</h2>\n<img src="https://raw.githubusercontent.com/AndresMWeber/cinegraph/main/examples/Edge_of_Tomorrow_c600_b5_r1920x1080_f1_fm50.jpg" />\n\n<h2>Example Write Frames</h2>\n<img src="https://raw.githubusercontent.com/AndresMWeber/cinegraph/main/examples/Elysium/f_1052.jpg" />\n<img src="https://raw.githubusercontent.com/AndresMWeber/cinegraph/main/examples/Elysium/f_2367.jpg" />\n<img src="https://raw.githubusercontent.com/AndresMWeber/cinegraph/main/examples/Elysium/f_108619.jpg" />\n<img src="https://raw.githubusercontent.com/AndresMWeber/cinegraph/main/examples/Elysium/f_122821.jpg" />\n<img src="https://raw.githubusercontent.com/AndresMWeber/cinegraph/main/examples/Elysium/f_150699.jpg" />\n<img src="https://raw.githubusercontent.com/AndresMWeber/cinegraph/main/examples/Elysium/f_157274.jpg" />\n</div>\n\n## üí® Quickstart <a name = "quickstart"></a>\nIf you are running from the repository Cinegraph can be invoked using:\n``` bash\n$ poetry run cinegraph \n```\nor if you are running from a pip installation you should have the CLI command available:\n``` bash\n$ cinegraph\n```\n\nIf you do not provide any positional arguments to specify input files it will automatically open a [Tkinter](https://docs.python.org/3/library/tkinter.html) file picker, you need to have a capable display window provider (if using WSL [Xserver](https://www.x.org/releases/X11R7.7/doc/man/man1/Xserver.1.xhtml) is a great option.)\n\nAdditionally you can run it with the following flags:\n### Flags\n```\nNAME\n    poetry run cinegraph\n    cinegraph\n\nSYNOPSIS\n    poetry run cinegraph <flags> [FILES]...\n    cinegraph <flags> [FILES]...\nPOSITIONAL ARGUMENTS\n    FILES\n        The files that you want to be processed.\n\nFLAGS\n    -c,--colors=COLORS\n        Number of colors in the Cinegraph\n        Example Input:\n            100\n    -b,--blur=BLUR\n        Blur amount for the Cinegraph\n        Example Input:\n            5\n    -r,--resolution=RESOLUTION\n        Resolution for the Cinegraph\n        Example Input:\n            1000,1200\n    -t,--template=TEMPLATE\n        International Standard Paper Format Name\n        Available Options:\n            A0 - \t    33-1/8 x 46-13/16 in\t    841 x 1188 mm\n            A1 - \t    23-3/8 x 33-1/8 in\t        594 x 841 mm\n            A2 - \t    16-1/2 x 23-3/8 in\t        420 x 594 mm\n            A3 - \t    11-3/4 x 16-1/2 in\t        297 x 420 mm\n            A4 - \t    8-1/4 x 11-3/4 in\t        210 x 297 mm\n            A5 - \t    5-7/8 x 8-1/4 in\t        148 x 210 mm\n            A6 - \t    4-1/8 x 5-7/8 in\t        105 x 148 mm\n            A7 - \t    2-15/16 x 4-1/8 in\t        74 x 105 mm\n            A8 - \t    2-1/16 x 2-15/16 in\t        52 x 74 mm\n            LETTER  -   8.5 x 11 in                 215.9 x 279.4 mm\n            SMALL\t-   11 x 17 in                  279.4 x 431.8 mm\n            MEDIUM\t-   18 x 24 in                  457.2 x 609.6 mm\n            LARGE\t-   24 x 36 in                  609.6 x 914.4 mm\n    -d,--dpi=DPI\n        The desired print resolution, must be specified as a whole number\n        e.g. 72\n    -f,--frame=FRAME\n        Add a white border + frame for the Cinegraph\n    -m,--margin=MARGIN\n        Set the margin (in pixels) for the border around the Cinegraph\n        e.g. 25\n    -w,--write_frames=WRITE_FRAMES\n        Output the frames with a center square that denotes the dominant color.\n```\n\n## üíæ Installation\n\n### From PyPi\n#### Install steps\n1. Install using pip: `pip install cinegraph`\n2. You will then have the CLI command available to you:\n``` bash\n$ cinegraph\n```\n\n### From GitHub Repo Clone\n#### Prerequsites\n\n1. [Python](https://www.python.org/) and [Python Poetry](https://python-poetry.org/) is installed\n\n#### Install steps\n1. `poetry install` (To install in the top level directory always: `poetry config virtualenvs.in-project true`)\n\n\n## ‚õèÔ∏è Tech Stack <a name = "tech"></a>\n\n- [Python](https://www.python.org/) - Software Development\n- [Poetry](https://python-poetry.org/) - Package Management\n- [OpenCV](https://opencv.org/) - Image Processing\n- [Fire](https://github.com/google/python-fire) - CLI Framework\n\n## ‚úçÔ∏è Authors <a name = "authors"></a>\n\n<a href="https://github.com/andresmweber/">\n    <img title="Andres Weber" src="https://github.com/andresmweber.png" height="50px">\n</a>\n\n## üéâ Acknowledgements <a name = "acknowledgement"></a>\n\n- [@FFMPEG](https://www.ffmpeg.org/) for providing amazing open source video solutions.\n- [The Colors of Motion](https://thecolorsofmotion.com/) for being the inspiriation and the idea that I tried my best to mimic. \n',
    'author': 'Andres Weber',
    'author_email': 'andresmweber@gmail.com',
    'maintainer': None,
    'maintainer_email': None,
    'url': None,
    'packages': packages,
    'package_data': package_data,
    'install_requires': install_requires,
    'entry_points': entry_points,
    'python_requires': '>=3.8,<4.0',
}


setup(**setup_kwargs)
