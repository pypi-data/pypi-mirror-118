#!python
# This file is placed in the Public Domain.

__version__ = 132

import importlib
import os
import pkgutil
import readline
import sys
import termios
import time

from obj import RunCfg, fmt, keys

RunCfg.wd = "/var/lib/botd/"
command = "/usr/bin/systemd-run"
arguments = "-q -t --property=Type=exec --no-ask-password --property=DynamicUser=yes --property=StateDirectory=botd botctl "


from run import Client, Runtime, Table, spl


class Kernel(Runtime):

    def error(self, txt):
        print(txt)
        sys.stdout.flush()
        
    def log(self, txt):
        if self.cfg.verbose:
            print(txt)
            sys.stdout.flush()


class CLI(Client):

    def handle(self, clt, e):
        k.put(e)

    def raw(self, txt):
        print(txt)
        sys.stdout.flush()


class Table(Table):

    def addmod(self, mn):
        spc = importlib.util.find_spec(mn)
        if not spc:
            return
        mod = importlib.import_module(mn)
        self.introspect(mod)

    def scan(self, pn):
        spc = importlib.util.find_spec(pn)
        if not spc:
            return
        pkg = importlib.import_module(pn)
        for mn in pkgutil.walk_packages(pkg.__path__, pn + "."):
            mod = importlib.import_module(mn.name)
            if mod:
                self.introspect(mod)


clt = CLI()
k = Kernel()
tbl = Table()


def exec(cmd, txt):
    return os.execv(cmd, txt.split())

def cmd(event):
    event.reply(",".join(keys(tbl.modnames)))

def ver(event):
    event.reply("BOTD %s" % __version__)

def main(): 
    k.privileges()
    k.parse_cli()
    tbl.add(cmd)
    tbl.add(ver)
    id = os.environ.get("INVOCATION_ID", None)
    if not id:
        arg = " ".join(sys.argv[1:])
        if not arg:
             return
        return exec(command, command + " " + arguments + arg)
    tbl.scan("bot")
    k.cmd(k.cfg.otxt)

main()
