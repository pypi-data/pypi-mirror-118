# AWS codebuild buildspec file

# note: had to follow https://docs.aws.amazon.com/codebuild/latest/userguide/sample-ecr.html
# to allow codebuild to get at private ECR repo

version: 0.2 # buildspec version, not related to the source's version

env:
    shell: bash
    git-credential-helper: yes
phases:
    install:
        commands:
            - echo CodeBuild started on `date`
            - echo Running install
    pre_build:
        commands:
            - echo Running pre_build
            - cp -r ${CODEBUILD_SRC_DIR_buildscripts} . # from AWS CodeBuild secondary source
            - cp ./buildscripts/Dockerfile .
            - NAME=$(cat NAME)
            - VERSION=$(cat ${NAME}/VERSION)
            - INITIATOR=${CODEBUILD_INITIATOR}
            - SOURCE_VERSION=${CODEBUILD_SOURCE_VERSION}
            - TRIGGER=${CODEBUILD_WEBHOOK_TRIGGER}
            - TEST_REPORT=${NAME}_test_report.xml
            - COVERAGE_REPORT_XML=${NAME}_coverage_report.xml
            - COVERAGE_REPORT_HTML=${NAME}_coverage_report
    build:
        commands:
            - echo Running build
            - docker build --tag ${NAME}:${VERSION} --build-arg NAME=${NAME} --build-arg VERSION=${VERSION} .
            - docker tag ${NAME}:${VERSION} ${NAME}:latest
            - docker run --env INITIATOR=${INITIATOR} --env SOURCE_VERSION=${SOURCE_VERSION} --env TRIGGER=${TRIGGER} --env VERSION=${VERSION} ${NAME}:${VERSION} ./buildscripts/upload_to_devpi_dev_branch.sh
            - ./buildscripts/tag_version_dev_branch.sh
            - echo Running pytests in Docker container
            - docker run --workdir /root/${NAME}/${NAME}/test ${NAME}:${VERSION} pytest --junit-xml=${TEST_REPORT} --cov=${NAME} --cov-branch --cov-report xml:${COVERAGE_REPORT_XML} --cov-report html:${COVERAGE_REPORT_HTML}
    post_build: # Note: post_build runs regardless of build completion
        commands:
            - echo Running post-build...
            - LAST_CONTAINER_ID=$(docker ps -alq)
            - docker cp ${LAST_CONTAINER_ID}:/root/${NAME}/${NAME}/test/${TEST_REPORT} ${NAME}/test/
            - docker cp ${LAST_CONTAINER_ID}:/root/${NAME}/${NAME}/test/${COVERAGE_REPORT_XML} ${NAME}/test/
            - docker cp ${LAST_CONTAINER_ID}:/root/${NAME}/${NAME}/test/${COVERAGE_REPORT_HTML} ${NAME}/test/
            - TESTPASS=${CODEBUILD_BUILD_SUCCEEDING}
            - docker run --env INITIATOR=${INITIATOR} --env SOURCE_VERSION=${SOURCE_VERSION} --env TRIGGER=${TRIGGER} --env TESTPASS=${TESTPASS} --env VERSION=${VERSION} ${NAME}:${VERSION} ./buildscripts/upload_to_devpi_main_branch.sh
            - ./buildscripts/tag_version_main_branch.sh
            - echo CodeBuild done at `date`
reports:
    test-reports:
        files:
            - ${TEST_REPORT}
        base-directory: ${NAME}/test/
        file-format: 'JUNITXML'
    coverage-reports:
        files:
            - ${COVERAGE_REPORT_XML}
        base-directory: ${NAME}/test/
        file-format: 'COBERTURAXML'
artifacts:
    files:
        - ${COVERAGE_REPORT_HTML}/**/*
    base-directory: ${NAME}/test/
