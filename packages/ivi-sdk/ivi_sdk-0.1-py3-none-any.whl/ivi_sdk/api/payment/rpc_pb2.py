# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: api/payment/rpc.proto
"""Generated protocol buffer code."""
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


from ivi_sdk.api.payment import definition_pb2 as api_dot_payment_dot_definition__pb2


DESCRIPTOR = _descriptor.FileDescriptor(
  name='api/payment/rpc.proto',
  package='ivi.rpc.api.payment',
  syntax='proto3',
  serialized_options=b'\n(games.mythical.ivi.sdk.proto.api.paymentP\001',
  create_key=_descriptor._internal_create_key,
  serialized_pb=b'\n\x15\x61pi/payment/rpc.proto\x12\x13ivi.rpc.api.payment\x1a\x1c\x61pi/payment/definition.proto2p\n\x0ePaymentService\x12^\n\x13GenerateClientToken\x12).ivi.proto.api.payment.CreateTokenRequest\x1a\x1c.ivi.proto.api.payment.TokenB,\n(games.mythical.ivi.sdk.proto.api.paymentP\x01\x62\x06proto3'
  ,
  dependencies=[api_dot_payment_dot_definition__pb2.DESCRIPTOR,])



_sym_db.RegisterFileDescriptor(DESCRIPTOR)


DESCRIPTOR._options = None

_PAYMENTSERVICE = _descriptor.ServiceDescriptor(
  name='PaymentService',
  full_name='ivi.rpc.api.payment.PaymentService',
  file=DESCRIPTOR,
  index=0,
  serialized_options=None,
  create_key=_descriptor._internal_create_key,
  serialized_start=76,
  serialized_end=188,
  methods=[
  _descriptor.MethodDescriptor(
    name='GenerateClientToken',
    full_name='ivi.rpc.api.payment.PaymentService.GenerateClientToken',
    index=0,
    containing_service=None,
    input_type=api_dot_payment_dot_definition__pb2._CREATETOKENREQUEST,
    output_type=api_dot_payment_dot_definition__pb2._TOKEN,
    serialized_options=None,
    create_key=_descriptor._internal_create_key,
  ),
])
_sym_db.RegisterServiceDescriptor(_PAYMENTSERVICE)

DESCRIPTOR.services_by_name['PaymentService'] = _PAYMENTSERVICE

# @@protoc_insertion_point(module_scope)
