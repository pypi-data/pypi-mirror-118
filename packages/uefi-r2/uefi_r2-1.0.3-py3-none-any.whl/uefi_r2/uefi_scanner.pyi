from typing import List, Optional
from uefi_r2.uefi_analyzer import NvramVariable as NvramVariable, UefiAnalyzer as UefiAnalyzer, UefiProtocol as UefiProtocol, UefiProtocolGuid as UefiProtocolGuid, UefiService as UefiService

class UefiRule:
    def __init__(self, rule: str) -> None: ...
    @property
    def name(self) -> Optional[str]: ...
    @property
    def namespace(self) -> Optional[str]: ...
    @property
    def description(self) -> Optional[str]: ...
    @property
    def url(self) -> Optional[str]: ...
    @property
    def strings(self) -> List[str]: ...
    @property
    def wide_strings(self) -> List[str]: ...
    @property
    def hex_strings(self) -> List[str]: ...
    @property
    def nvram_vars(self) -> List[NvramVariable]: ...
    @property
    def protocols(self) -> List[UefiProtocol]: ...
    @property
    def ppi_list(self) -> List[UefiProtocol]: ...
    @property
    def protocol_guids(self) -> List[UefiProtocolGuid]: ...
    @property
    def esil_rules(self) -> List[List[str]]: ...

class UefiScanner:
    def __init__(self, uefi_analyzer: UefiAnalyzer, uefi_rule: UefiRule) -> None: ...
    @property
    def result(self) -> bool: ...
