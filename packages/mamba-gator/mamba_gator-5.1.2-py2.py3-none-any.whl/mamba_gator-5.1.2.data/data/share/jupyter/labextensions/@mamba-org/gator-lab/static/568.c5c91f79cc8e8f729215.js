(self.webpackChunk_mamba_org_gator_lab=self.webpackChunk_mamba_org_gator_lab||[]).push([[568],{1568:function(e,t,a){"use strict";var n=this&&this.__awaiter||function(e,t,a,n){return new(a||(a=Promise))((function(o,i){function s(e){try{c(n.next(e))}catch(e){i(e)}}function r(e){try{c(n.throw(e))}catch(e){i(e)}}function c(e){var t;e.done?o(e.value):(t=e.value,t instanceof a?t:new a((function(e){e(t)}))).then(s,r)}c((n=n.apply(e,t||[])).next())}))};Object.defineProperty(t,"__esModule",{value:!0});const o=a(2678),i=a(2493),s=a(3275),r=a(6643),c=a(7039),l=a(7812),d=a(3817),u=a(7786),m="@mamba-org/gator-lab:plugin",p=[{id:m,autoStart:!0,activate:function(e,t,a,o,s){return n(this,void 0,void 0,(function*(){let n;const{commands:r,shell:l}=e,u="conda-env",p="jupyter_conda:open-ui",g=yield null==t?void 0:t.load(m),_=new c.CondaEnvironments(g);h.loadPackages(_);const f=new i.WidgetTracker({namespace:u});let v;return r.addCommand(p,{label:"Conda Packages Manager",execute:()=>{e.restored.then((()=>{let e=0;const t=()=>{setTimeout((()=>{e+=1e3,(null==v?void 0:v.isVisible)&&n?r.execute("jupyterlab-tour:launch",{id:n.id,force:!1}):e<5001&&t()}),1e3)};r.hasCommand("jupyterlab-tour:add")&&(n||r.execute("jupyterlab-tour:add",{tour:d.managerTour}).then((e=>{n=e})),t())})),v&&!v.isDisposed||(v=new i.MainAreaWidget({content:new c.CondaEnvWidget(_)}),v.addClass(c.CONDA_WIDGET_CLASS),v.id=u,v.title.label="Packages",v.title.caption="Conda Packages Manager",v.title.icon=c.condaIcon),f.has(v)||f.add(v),v.isAttached||l.add(v,"main"),l.activateById(v.id)}}),a&&a.addItem({command:p,category:"Settings"}),s&&s.restore(f,{command:p,name:()=>u}),o&&o.settingsMenu.addGroup([{command:p}],999),_}))},optional:[r.ISettingRegistry,i.ICommandPalette,s.IMainMenu,o.ILayoutRestorer],provides:c.IEnvironmentManager},{id:u.companionID,autoStart:!0,activate:function(e,t,a,o){return n(this,void 0,void 0,(function*(){const{commands:n,serviceManager:i}=e,s="jupyter_conda:companions",r=yield a.load(m),c=new u.CompanionValidator(i.kernelspecs,t,r);return n.addCommand(s,{label:"Validate kernels compatibility",execute:()=>{c.validate(i.kernelspecs.specs)}}),o&&o.addItem({command:s,category:"Troubleshooting"}),c}))},requires:[c.IEnvironmentManager,r.ISettingRegistry],optional:[i.ICommandPalette],provides:u.ICompanionValidator}];var h;t.default=p,function(e){e.loadPackages=function(e){let t,a=!1;const n=["I know you want to give up, but wait a bit longer...","Why is conda so popular, still loading that gigantic packages list...","Take a break, available packages list are still loading...","Available packages list still loading..."];function o(e){setTimeout((()=>{a||(l.INotification.update({message:e,toastId:t}),n.length>0&&o(n.pop()))}),6e4)}e.getPackageManager().refreshAvailablePackages(!1).then((()=>{a=!0,t&&l.INotification.dismiss(t)})).catch((e=>{console.debug("Fail to cache available packages list.",e),t&&l.INotification.dismiss(t)})),setTimeout((()=>{a||(l.INotification.inProgress("Loading the available packages list in background...").then((e=>{t=e})),o(n.pop()))}),6e4)}}(h||(h={}))},3817:function(e,t,a){"use strict";var n=this&&this.__createBinding||(Object.create?function(e,t,a,n){void 0===n&&(n=a),Object.defineProperty(e,n,{enumerable:!0,get:function(){return t[a]}})}:function(e,t,a,n){void 0===n&&(n=a),e[n]=t[a]}),o=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),i=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var a in e)"default"!==a&&Object.prototype.hasOwnProperty.call(e,a)&&n(t,e,a);return o(t,e),t};Object.defineProperty(t,"__esModule",{value:!0}),t.managerTour=void 0;const s=a(7039),r=i(a(6271));t.managerTour={id:"jupyterlab-conda:tour",label:"Conda Packages Manager Tour",hasHelpEntry:!0,steps:[{content:r.createElement("p",null,"Thanks for installing ",r.createElement("em",null,"Gator"),".",r.createElement("br",null),"Let's have a tour of the UI."),placement:"center",target:`.${s.CONDA_WIDGET_CLASS}`,title:"Conda Packages Manager"},{content:r.createElement("p",null,"Your conda environment are listed here.",r.createElement("br",null),"Click on it to manage its packages."),placement:"right",target:`#${s.CONDA_ENVIRONMENT_PANEL_ID}`},{content:r.createElement("p",null,"This toolbar contains environment actions like creation, deletion, exportation,..."),placement:"bottom",target:`.${s.CONDA_ENVIRONMENT_TOOLBAR_CLASS}`},{content:r.createElement("p",null,"This table lists all available conda packages and their status within the selected environment (i.e. installed, updatable or available)."),target:`#${s.CONDA_PACKAGES_PANEL_ID}`},{content:r.createElement("p",null,"A package can be installed, removed or updated by selecting a status in these selectors."),placement:"bottom",target:`.${s.CONDA_PACKAGE_SELECT_CLASS}`},{content:r.createElement("p",null,"The package list can be filtered by packages status and with a search term."),placement:"bottom-start",target:`.${s.CONDA_PACKAGES_TOOLBAR_CLASS}`},{content:r.createElement("p",null,"Execute package changes with the cart button."),placement:"bottom",target:`.${s.CONDA_PACKAGES_TOOLBAR_CLASS} .fa-cart-arrow-down`}]}},7786:function(e,t,a){"use strict";var n=this&&this.__awaiter||function(e,t,a,n){return new(a||(a=Promise))((function(o,i){function s(e){try{c(n.next(e))}catch(e){i(e)}}function r(e){try{c(n.throw(e))}catch(e){i(e)}}function c(e){var t;e.done?o(e.value):(t=e.value,t instanceof a?t:new a((function(e){e(t)}))).then(s,r)}c((n=n.apply(e,t||[])).next())}))},o=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.CompanionValidator=t.ICompanionValidator=t.companionID=void 0;const i=a(5040),s=a(1797),r=a(7812),c=o(a(2875));t.companionID="@mamba-org/gator-lab:companion",t.ICompanionValidator=new s.Token("@mamba-org/gator-lab:ICompanionValidator");const l=/[\u0300-\u036F]/g;class d{constructor(e,t,a){this._isDisposed=!1,this._companions={},this._clean=()=>{},this._envManager=t,this._updateCompanions(a),a.changed.connect(this._updateCompanions,this),e.ready.then((()=>{this._validateSpecs(e,e.specs),e.specsChanged.connect(this._validateSpecs,this)})),new Promise((e=>{this._clean=e}).bind(this)).then((()=>{a.changed.disconnect(this._updateCompanions,this),e.specsChanged.disconnect(this._validateSpecs,this)}))}get isDisposed(){return this._isDisposed}dispose(){this.isDisposed||(this._clean(),this._isDisposed=!0)}_updateCompanions(e){this._companions=e.get("companions").composite}static kernelNameToEnvironment(e){const t=e.split("-");if("conda"===t[0]){if(t.length>=4)return t[2];if(3===t.length&&"root"===t[2])return"base"}return null}static _semverToPython(e){return e?e.split("||").map((e=>e.split(" ").join(","))).join("|"):null}_validateSpecs(e,t){return n(this,void 0,void 0,(function*(){if(0===Object.keys(this._companions).length)return;const e=yield this._envManager.environments,a={};function n(e,t,a){r.INotification.warning(`Environment "${a}" has some inconsistencies.`,{buttons:[{label:"Correct",caption:"Correct installed packages",callback:()=>{r.INotification.inProgress("Correct the environment.").then((n=>{t.getPackageManager().install(e,a).then((()=>{r.INotification.update({toastId:n,message:"Environment corrected",type:"success",autoClose:5e3})})).catch((e=>{console.error(e),r.INotification.update({toastId:n,message:"Fail to correct the environment.",type:"error"})}))}))}}]})}e.forEach((e=>{const t=e.name.normalize("NFKD").replace(l,"").replace(/[^a-zA-Z0-9._-]/g,"_");a[t]=e.name}));for(const e of Object.keys(t.kernelspecs)){let o;const{conda_env_name:s,conda_env_path:r}=t.kernelspecs[e].metadata;if(r)o="root"===s?"base":i.PathExt.basename(r);else{const t=d.kernelNameToEnvironment(e);o=a[t]}if(o)try{const e=yield this._envManager.getPackageManager().refresh(!1,o),t=Object.keys(this._companions),a=[];e.forEach((e=>{if(t.indexOf(e.name)>=0&&!c.default.satisfies(e.version_installed,this._companions[e.name])){let t=d._semverToPython(c.default.validRange(this._companions[e.name]));t&&("<>=".indexOf(t[0])<0&&(t="="+t),a.push(e.name+t))}})),a.length>0&&n(a,this._envManager,o)}catch(e){console.error(`Fail to check environment '${o}'`,e)}}}))}validate(e){this._validateSpecs(null,e)}}t.CompanionValidator=d}}]);