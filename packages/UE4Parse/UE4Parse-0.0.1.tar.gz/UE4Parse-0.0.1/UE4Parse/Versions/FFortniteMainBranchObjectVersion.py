from enum import IntEnum, auto
from UE4Parse.Assets.Objects.FGuid import FGuid
from UE4Parse.BinaryReader import BinaryStream
from .EUEVersion import EUEVersion


class FFortniteMainBranchObjectVersion:
    """Custom serialization version for changes made in the //Fortnite/Main stream"""

    class Type(IntEnum):
        # Before any version changes were made
        BeforeCustomVersionWasAdded = 0,

        # World composition tile offset changed from 2d to 3d
        WorldCompositionTile3DOffset = auto()

        # Minor material serialization optimization
        MaterialInstanceSerializeOptimization_ShaderFName = auto()

        # Refactored cull distances to account for HLOD, explicit override and globals in priority
        CullDistanceRefactor_RemovedDefaultDistance = auto()
        CullDistanceRefactor_NeverCullHLODsByDefault = auto()
        CullDistanceRefactor_NeverCullALODActorsByDefault = auto()

        # Support to remove morphtarget generated by bRemapMorphtarget
        SaveGeneratedMorphTargetByEngine = auto()

        # Convert reduction setting options
        ConvertReductionSettingOptions = auto()

        # Serialize the type of blending used for landscape layer weight static params
        StaticParameterTerrainLayerWeightBlendType = auto()

        # Fix up None Named animation curve names, 
        FixUpNoneNameAnimationCurves = auto()

        # Ensure ActiveBoneIndices to have parents even not skinned for old assets
        EnsureActiveBoneIndicesToContainParents = auto()

        # Serialize the instanced static mesh render data, to avoid building it at runtime
        SerializeInstancedStaticMeshRenderData = auto()

        # Cache material quality node usage
        CachedMaterialQualityNodeUsage = auto()

        # Font outlines no longer apply to drop shadows for new objects but we maintain the opposite way for backwards compat
        FontOutlineDropShadowFixup = auto()

        # New skeletal mesh import workflow (Geometry only or animation only re-import )
        NewSkeletalMeshImporterWorkflow = auto()

        # Migrate data from previous data structure to new one to support materials per LOD on the Landscape
        NewLandscapeMaterialPerLOD = auto()

        # New Pose Asset data type
        RemoveUnnecessaryTracksFromPose = auto()

        # Migrate Foliage TLazyObjectPtr to TSoftObjectPtr
        FoliageLazyObjPtrToSoftObjPtr = auto()

        # TimelineTemplates store their derived names instead of dynamically generating
        # This code tied to this version was reverted and redone at a later date
        REVERTED_StoreTimelineNamesInTemplate = auto()

        # Added BakePoseOverride for LOD setting
        AddBakePoseOverrideForSkeletalMeshReductionSetting = auto()

        # TimelineTemplates store their derived names instead of dynamically generating
        StoreTimelineNamesInTemplate = auto()

        # New Pose Asset data type
        WidgetStopDuplicatingAnimations = auto()

        # Allow reducing of the base LOD, we need to store some imported model data so we can reduce again from the same data.
        AllowSkeletalMeshToReduceTheBaseLOD = auto()

        # Curve Table size reduction
        ShrinkCurveTableSize = auto()

        # Widgets upgraded with WidgetStopDuplicatingAnimations, may not correctly default-to-self for the widget parameter.
        WidgetAnimationDefaultToSelfFail = auto()

        # HUDWidgets now require an element tag
        FortHUDElementNowRequiresTag = auto()

        # Animation saved as bulk data when cooked
        FortMappedCookedAnimation = auto()

        # Support Virtual Bone in Retarget Manager
        SupportVirtualBoneInRetargeting = auto()

        # Fixup bad defaults in water metadata
        FixUpWaterMetadata = auto()

        # Move the location of water metadata
        MoveWaterMetadataToActor = auto()

        # Replaced lake collision component
        ReplaceLakeCollision = auto()

        # Anim layer node names are now conformed by Guid
        AnimLayerGuidConformation = auto()

        # Ocean collision component has become dynamic
        MakeOceanCollisionTransient = auto()

        # FFieldPath will serialize the owner struct reference and only a short path to its property
        FFieldPathOwnerSerialization = auto()

        # Simplified WaterBody post process material handling 
        FixUpUnderwaterPostProcessMaterial = auto()

        # A single water exclusion volume can now exclude N water bodies
        SupportMultipleWaterBodiesPerExclusionVolume = auto()

        # Serialize rigvm operators one by one instead of the full byte code array to ensure determinism
        RigVMByteCodeDeterminism = auto()

        # Serialize the physical materials generated by the render material
        LandscapePhysicalMaterialRenderData = auto()

        # RuntimeVirtualTextureVolume fix transforms
        FixupRuntimeVirtualTextureVolume = auto()

        # Retrieve water body collision components that were lost in cooked builds
        FixUpRiverCollisionComponents = auto()

        # Fix duplicate spline mesh components on rivers
        FixDuplicateRiverSplineMeshCollisionComponents = auto()

        # Indicates level has stable actor guids
        ContainsStableActorGUIDs = auto()

        # Levelset Serialization support for BodySetup.
        LevelsetSerializationSupportForBodySetup = auto()

        # Moving Chaos solver properties to allow them to exist in the project physics settings
        ChaosSolverPropertiesMoved = auto()

        # Moving some UFortGameFeatureData properties and behaviors into the UGameFeatureAction pattern
        GameFeatureData_MovedComponentListAndCheats = auto()

        # Add centrifugal forces for cloth
        ChaosClothAddfictitiousforces = auto()

        # Chaos Convex StructureData supports different index sizes based on num verts/planes
        # Chaos FConvex uses array of FVec3s for vertices instead of particles
        # (Merged from //UE4/Main)
        ChaosConvexVariableStructureDataAndVerticesArray = auto()

        # Remove the WaterVelocityHeightTexture dependency on MPC_Landscape and LandscapeWaterIndo 
        RemoveLandscapeWaterInfo = auto()

        # Added the weighted value property type to store the cloths weight maps' low/high ranges
        ChaosClothAddWeightedValue = auto()

        # Added the Long Range Attachment stiffness weight map
        ChaosClothAddTetherStiffnessWeightMap = auto()

        # Fix corrupted LOD transition maps
        ChaosClothFixLODTransitionMaps = auto()

        # Enable a few more weight maps to better art direct the cloth simulation
        ChaosClothAddTetherScaleAndDragLiftWeightMaps = auto()

        # Enable material (edge, bending, and area stiffness) weight maps
        ChaosClothAddMaterialWeightMaps = auto()

        # Added bShowCurve for movie scene float channel serialization
        SerializeFloatChannelShowCurve = auto()

        # -----<new versions can be added above this line>-------------------------------------------------
        VersionPlusOne = auto()
        LatestVersion = VersionPlusOne - 1

    GUID: FGuid = FGuid(0x601D1886, 0xAC644F84, 0xAA16D3DE, 0x0DEAC7D6)

    def __init__(self):
        pass

    def get(self, reader: BinaryStream):
        ver = reader.CustomVer(self.GUID)
        if ver > 0:
            return self.Type(ver)

        if reader.game == EUEVersion.GAME_UE4_20:
            return self.Type.BeforeCustomVersionWasAdded
        elif reader.game == EUEVersion.GAME_UE4_21:
            return self.Type.CachedMaterialQualityNodeUsage
        elif reader.game == EUEVersion.GAME_UE4_22:
            return self.Type.FoliageLazyObjPtrToSoftObjPtr
        elif reader.game == EUEVersion.GAME_UE4_23:
            return self.Type.FortHUDElementNowRequiresTag
        elif reader.game == EUEVersion.GAME_UE4_24:
            return self.Type.SupportVirtualBoneInRetargeting
        elif reader.game == EUEVersion.GAME_UE4_26:
            return self.Type.AnimLayerGuidConformation
        elif reader.game == EUEVersion.GAME_UE4_27:
            return self.Type.ChaosSolverPropertiesMoved
        else:
            return self.Type.LatestVersion
